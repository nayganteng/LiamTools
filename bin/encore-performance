#!/system/bin/sh

# Sync to data in the rare case a device crashes
sync

soc=$(cat /data/encore/soc_recognition)

apply() {
	if [ -f $2 ]; then
		chmod 644 $2 >/dev/null 2>&1
		echo $1 >$2 2>/dev/null
		chmod 444 $2 >/dev/null 2>&1
	fi
}

# Disable battery saver module
apply N /sys/module/battery_saver/parameters/enabled

if [ -f "/sys/kernel/debug/sched_features" ]; then
	# Consider scheduling tasks that are eager to run
	apply NEXT_BUDDY /sys/kernel/debug/sched_features

	# Some sources report large latency spikes during large migrations
	apply NO_TTWU_QUEUE /sys/kernel/debug/sched_features
fi

if [ -d "/dev/stune/" ]; then
	# Prefer to schedule top-app tasks on idle CPUs
	apply 1 /dev/stune/top-app/schedtune.prefer_idle

	# Mark top-app as boosted, find high-performing CPUs
	apply 1 /dev/stune/top-app/schedtune.boost
fi

# Oppo/Oplus/Realme Touchpanel
tp_path="/proc/touchpanel"
if [ -d tp_path ]; then
	apply "1" $tp_path/game_switch_enable
	apply "0" $tp_path/oplus_tp_limit_enable
	apply "0" $tp_path/oppo_tp_limit_enable
	apply "1" $tp_path/oplus_tp_direction
	apply "1" $tp_path/oppo_tp_direction
fi

# Setting perf_cpu_time_max_percent to 3
apply 3 /proc/sys/kernel/perf_cpu_time_max_percent

# Memory tweak
apply 200 /proc/sys/vm/vfs_cache_pressure

# eMMC and UFS governor
for path in /sys/class/devfreq/*.ufshc; do
	apply performance $path/governor
done

for path in /sys/class/devfreq/mmc*; do
	apply performance $path/governor
done

# CPU tweaks
for path in /sys/devices/system/cpu/cpufreq/policy*; do
	apply "$(cat /data/encore/perf_cpu_gov)" "$path/scaling_governor"
done

apply 1 /sys/devices/system/cpu/cpu1/online

# Mediatek Tweaks
if [ $soc -eq 1 ]; then
	# Force CPU to highest possible OPP
	cluster=0
	for path in /sys/devices/system/cpu/cpufreq/policy*; do
		apply "$cluster $(awk '{print $1}' $path/scaling_available_frequencies)" /proc/ppm/policy/hard_userlimit_min_cpu_freq
		((cluster++))
	done
	unset cluster

	# PPM throttle
	if [ -f /proc/ppm/policy_status ]; then
		policy_file="/proc/ppm/policy_status"
		pwr_thro_idx=$(grep 'PPM_POLICY_PWR_THRO' $policy_file | sed 's/.*\[\(.*\)\].*/\1/')
		thermal_idx=$(grep 'PPM_POLICY_THERMAL' $policy_file | sed 's/.*\[\(.*\)\].*/\1/')

		echo "$pwr_thro_idx 0" >$policy_file
		echo "$thermal_idx 0" >$policy_file
	fi

	# MTK Power and CCI mode
	apply "1" /proc/cpufreq/cpufreq_cci_mode
	apply "3" /proc/cpufreq/cpufreq_power_mode

	# EAS/HMP Switch
	apply "0" /sys/devices/system/cpu/eas/enable

	# GPU Frequency
	if [ -d /proc/gpufreq ]; then
		gpu_freq="$(cat /proc/gpufreq/gpufreq_opp_dump | grep -o 'freq = [0-9]*' | sed 's/freq = //' | sort -nr | head -n 1)"
		apply "$gpu_freq" /proc/gpufreq/gpufreq_opp_freq
	elif [ -d /proc/gpufreqv2 ]; then
		apply 0 /proc/gpufreqv2/fix_target_opp_index
	fi

	# Disable GPU Power limiter
	if [ -f "/proc/gpufreq/gpufreq_power_limited" ]; then
		apply "ignore_batt_oc 1" /proc/gpufreq/gpufreq_power_limited
		apply "ignore_batt_percent 1" /proc/gpufreq/gpufreq_power_limited
		apply "ignore_low_batt 1" /proc/gpufreq/gpufreq_power_limited
		apply "ignore_thermal_protect 1" /proc/gpufreq/gpufreq_power_limited
		apply "ignore_pbm_limited 1" /proc/gpufreq/gpufreq_power_limited
	fi

	# Disable battery current limiter
	apply "stop 1" /proc/mtk_batoc_throttling/battery_oc_protect_stop

	# DRAM Frequency
	apply "0" /sys/devices/platform/10012000.dvfsrc/helio-dvfsrc/dvfsrc_req_ddr_opp
	apply "0" /sys/kernel/helio-dvfsrc/dvfsrc_force_vcore_dvfs_opp
	apply "performance" /sys/class/devfreq/mtk-dvfsrc-devfreq/governor
	apply "performance" /sys/devices/platform/soc/1c00f000.dvfsrc/mtk-dvfsrc-devfreq/devfreq/mtk-dvfsrc-devfreq/governor

	# Eara Thermal
	apply "0" /sys/kernel/eara_thermal/enable

# Qualcomm Tweaks
elif [ $soc -eq 2 ]; then
	# Qualcomm CPU Bus and DRAM frequencies
	for path in /sys/class/devfreq/*cpu-ddr-latfloor*; do
		apply "performance" $path/governor
	done

	for path in /sys/class/devfreq/*cpu*-lat; do
		apply "performance" $path/governor
	done

	for path in /sys/class/devfreq/*cpu-cpu-ddr-bw; do
		apply "performance" $path/governor
	done

	for path in /sys/class/devfreq/*cpu-cpu-llcc-bw; do
		apply "performance" $path/governor
	done

	if [ -d /sys/devices/system/cpu/bus_dcvs/LLCC ]; then
		freq=$(cat /sys/devices/system/cpu/bus_dcvs/LLCC/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		for path in /sys/devices/system/cpu/bus_dcvs/LLCC/*/max_freq; do
			apply $freq $path
		done
		for path in /sys/devices/system/cpu/bus_dcvs/LLCC/*/min_freq; do
			apply $freq $path
		done
	fi

	if [ -d /sys/devices/system/cpu/bus_dcvs/L3 ]; then
		freq=$(cat /sys/devices/system/cpu/bus_dcvs/L3/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		for path in /sys/devices/system/cpu/bus_dcvs/L3/*/max_freq; do
			apply $freq $path
		done
		for path in /sys/devices/system/cpu/bus_dcvs/L3/*/min_freq; do
			apply $freq $path
		done
	fi

	if [ -d /sys/devices/system/cpu/bus_dcvs/DDR ]; then
		freq=$(cat /sys/devices/system/cpu/bus_dcvs/DDR/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		for path in /sys/devices/system/cpu/bus_dcvs/DDR/*/max_freq; do
			apply $freq $path
		done
		for path in /sys/devices/system/cpu/bus_dcvs/DDR/*/min_freq; do
			apply $freq $path
		done
	fi

	if [ -d /sys/devices/system/cpu/bus_dcvs/DDRQOS ]; then
		freq=$(cat /sys/devices/system/cpu/bus_dcvs/DDRQOS/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		for path in /sys/devices/system/cpu/bus_dcvs/DDRQOS/*/max_freq; do
			apply $freq $path
		done
		for path in /sys/devices/system/cpu/bus_dcvs/DDRQOS/*/min_freq; do
			apply $freq $path
		done
	fi

	# GPU Frequency
	gpu_path="/sys/class/kgsl/kgsl-3d0/devfreq"

	if [ -d $gpu_path ]; then
		freq=$(cat $gpu_path/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		apply $freq $gpu_path/min_freq
		apply $freq $gpu_path/max_freq
	fi

	# GPU Bus
	for path in /sys/class/devfreq/*gpubw*; do
		apply "performance" $path/governor
	done

	# Adreno Boost
	apply 3 /sys/class/kgsl/kgsl-3d0/devfreq/adrenoboost

# Exynos
elif [ $soc -eq 3 ]; then
	# GPU Frequency
	gpu_path="/sys/kernel/gpu"

	if [ -d $gpu_path ]; then
		freq=$(cat $gpu_path/gpu_available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		apply $freq $gpu_path/gpu_min_clock
		apply $freq $gpu_path/gpu_max_clock
	fi

# Unisoc
elif [ $soc -eq 4 ]; then
	# GPU Frequency
	gpu_path=$(find /sys/class/devfreq/ -type d -iname "*.gpu" -print -quit 2>/dev/null)

	if [ -d $gpu_path ]; then
		freq=$(cat $gpu_path/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		apply $freq $gpu_path/min_freq
		apply $freq $gpu_path/max_freq
	fi

# Google Tensor
elif [ $soc -eq 5 ]; then
	# GPU Frequency
	gpu_path=$(find /sys/devices/platform/ -type d -iname "*.mali" -print -quit 2>/dev/null)

	if [ -d $gpu_path ]; then
		freq=$(cat $gpu_path/available_frequencies | tr ' ' '\n' | sort -nr | head -n 1)
		apply $freq $gpu_path/scaling_min_freq
		apply $freq $gpu_path/scaling_max_freq
	fi
fi
